version: '3.8'

services:
  mcp-server:
    build: .
    container_name: mcp-server
    restart: unless-stopped
    ports:
      - "8000:8000"  # Main API
      - "8004:8004"  # Docker API
      - "8005:8005"  # Email API
      - "8006:8006"  # Filesystem API
      - "8007:8007"  # Puppeteer API
    volumes:
      - ./data:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DOCKER_PORT=8004
      - EMAIL_PORT=8005
      - FILESYSTEM_PORT=8006
      - FILESYSTEM_BASE_PATH=/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - PYTHONUNBUFFERED=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  # Optional: Add Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - mcp-server

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_AUTH_DISABLE_LOGIN_FORM=false
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:
